{"version":3,"file":"static/js/302.88a4b732.chunk.js","mappings":"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","sources":["webpack://slim-mom/./src/components/CalcForm/CalcForm.module.css?7d52","components/Modal/Modal.styled.js","components/Modal/Modal.jsx","services/validation/calcSchema.js","components/CalcForm/CalcForm.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/Calculator/Calculator.styled.js","pages/Calculator/Calculator.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Thumb\":\"CalcForm_Thumb__131QB\",\"Title\":\"CalcForm_Title__wbmQp\",\"FormStyled\":\"CalcForm_FormStyled__zOYzu\",\"LabelFirst\":\"CalcForm_LabelFirst__gKNq0\",\"CurrenValue\":\"CalcForm_CurrenValue__FqrJP\",\"BloodTitle\":\"CalcForm_BloodTitle__SvqDS\",\"FormLabel\":\"CalcForm_FormLabel__tDNt3\",\"tooltiptext\":\"CalcForm_tooltiptext__YdGpV\",\"TextInp\":\"CalcForm_TextInp__1uDMY\",\"List\":\"CalcForm_List__hvFY2\",\"RadioInp\":\"CalcForm_RadioInp__BddlF\",\"ButtonCon\":\"CalcForm_ButtonCon__M3uTH\",\"Button\":\"CalcForm_Button__C29wc\"};","import { breakpoints } from 'helpers/breakpoints';\nimport { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  min-width: 320px;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(33, 33, 33, 0.12);\n  z-index: 1200;\n\n  @media ${breakpoints.maxMobile} {\n    top: 120px;\n  }\n`;\nexport const CloseLine = styled.div`\n  position: absolute;\n  left: 0px;\n  right: 0;\n  top: -38px;\n  height: 40px;\n\n  background: #eff1f3;\n  @media ${breakpoints.minTablet} {\n    display: none;\n  }\n`;\n\nexport const ModalWindow = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  min-width: 320px;\n  height: 100%;\n\n  padding: 40px 20px 119px;\n  background-color: ${p => p.theme.modalColor};\n  box-shadow: 0px 22px 40px rgba(0, 0, 0, 0.1);\n\n  @media (min-width: 768px) {\n    width: 672px;\n    height: 573px;\n    padding: 64px 82px 81px;\n  }\n`;\n\nexport const ModulCloseBtn = styled.button`\n  display: none;\n\n  @media (min-width: 768px) {\n    display: inline-flex;\n    position: absolute;\n    top: 20px;\n    right: 20px;\n    background-color: transparent;\n    border: none;\n    cursor: pointer;\n  }\n`;\n\nexport const ModalTitle = styled.h2`\n  min-width: 280px;\n  font-family: 'Jost', sans-serif;\n  font-style: normal;\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 1.44;\n\n  color: #212121;\n\n  margin-bottom: 40px;\n\n  @media (min-width: 768px) {\n    width: 365px;\n    font-size: 26px;\n    line-height: 1.23;\n    text-align: center;\n    margin-bottom: 20px;\n  }\n`;\n\nexport const Callories = styled.span`\n  min-width: 279px;\n  font-family: 'Jost', sans-serif;\n  font-style: normal;\n  font-weight: 700;\n  font-size: 48px;\n  line-height: 1.2;\n  text-align: center;\n  letter-spacing: 0.04em;\n\n  color: ${p => p.theme.modalTextColor};\n\n  margin-bottom: 20px;\n\n  @media (min-width: 768px) {\n    width: 330px;\n  }\n`;\n\nexport const CalloriesText = styled(Callories)`\n  font-size: 22px;\n`;\n\nexport const ModulLine = styled.div`\n  width: 280px;\n  color: #e0e0e0;\n\n  margin-bottom: 12px;\n\n  border: 1px solid #e0e0e0;\n\n  @media (min-width: 768px) {\n    width: 330px;\n  }\n`;\n\nexport const FoodTitle = styled.p`\n  min-width: 280px;\n  font-family: 'Jost', sans-serif;\n  font-style: normal;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 1.21;\n  letter-spacing: 0.04em;\n\n  color: #212121;\n\n  margin-bottom: 15px;\n\n  @media (min-width: 768px) {\n    width: 330px;\n  }\n`;\n\nexport const FoodText = styled.ol`\n  width: 280px;\n  max-height: 112px;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  overflow-y: auto;\n\n  font-family: 'Jost', sans-serif;\n  font-style: normal;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 1.21;\n  letter-spacing: 0.04em;\n\n  color: #9b9faa;\n  list-style: number;\n\n  margin-bottom: 35px;\n\n  &::-webkit-scrollbar {\n    width: 6px;\n  }\n\n  &::-webkit-scrollbar-track {\n    background: #f0f1f3;\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background-color: #264061;\n  }\n\n  @media (min-width: 768px) {\n    width: 330px;\n  }\n`;\n\nexport const RegisterBtn = styled(NavLink)`\n  display: flex;\n  flex-shrink: 0;\n  justify-content: center;\n  align-items: center;\n  width: 210px;\n  height: 44px;\n  font-family: 'Jost', sans-serif;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 1.21;\n  letter-spacing: 0.04em;\n  color: #fff;\n  text-decoration: none;\n\n  background-color: #fc842d;\n  box-shadow: 0px 4px 10px rgba(252, 132, 45, 0.5);\n  border: none;\n  border-radius: 30px;\n  cursor: pointer;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus {\n    color: #fc842d;\n    background-color: #fff;\n  }\n`;\n","import { createPortal } from 'react-dom';\nimport { useEffect, useMemo, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Overlay,\n  ModalWindow,\n  ModalTitle,\n  Callories,\n  CalloriesText,\n  FoodTitle,\n  FoodText,\n  ModulCloseBtn,\n  ModulLine,\n  RegisterBtn,\n  CloseLine,\n} from './Modal.styled';\nimport { Container } from 'components/Container';\nimport GoBackBtn from 'components/UserMenu/GoBackBtn';\nimport Filter from 'components/Filter';\n\nconst modalRoot = document.getElementById('modal-root');\n\nexport default function Modal({ setIsOpen, dailyRateCalc }) {\n  const { dailyRate, notAllowedProducts } = dailyRateCalc;\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    document.addEventListener('keydown', handleKeyDown);\n    document.body.style.overflow = 'hidden';\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n      document.body.style.overflow = 'unset';\n    };\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleBackdropClick = event => {\n    if (event.currentTarget === event.target) setIsOpen(false);\n  };\n\n  const handleCloseClick = () => {\n    setIsOpen(false);\n  };\n\n  const handleKeyDown = event => {\n    if (event.code === 'Escape') setIsOpen(false);\n  };\n\n  const handleFilter = event => {\n    setFilter(event.target.value);\n  };\n\n  const filteredProducts = useMemo(\n    () =>\n      notAllowedProducts\n        .filter(product => product.toLowerCase().includes(filter.toLowerCase()))\n        .sort((prev, post) => prev.localeCompare(post)),\n    [filter, notAllowedProducts]\n  );\n\n  return createPortal(\n    <>\n      <Overlay onClick={handleBackdropClick}>\n        <CloseLine>\n          <Container>\n            <GoBackBtn handleCloseClick={handleCloseClick}>close</GoBackBtn>\n          </Container>\n        </CloseLine>\n        <ModalWindow>\n          <ModulCloseBtn type=\"button\" onClick={handleCloseClick}>\n            <svg\n              width=\"12\"\n              height=\"12\"\n              viewBox=\"0 0 12 12\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                d=\"M11.8333 1.3415L10.6583 0.166504L5.99998 4.82484L1.34164 0.166504L0.166641 1.3415L4.82498 5.99984L0.166641 10.6582L1.34164 11.8332L5.99998 7.17484L10.6583 11.8332L11.8333 10.6582L7.17498 5.99984L11.8333 1.3415Z\"\n                fill=\"black\"\n              />\n            </svg>\n          </ModulCloseBtn>\n          <ModalTitle>Your recommended daily calorie intake is</ModalTitle>\n          <Callories>\n            {dailyRate}\n            <CalloriesText>ккал</CalloriesText>\n          </Callories>\n          <ModulLine />\n          <FoodTitle>Foods you should not eat</FoodTitle>\n          <Filter onChangeFilter={handleFilter} value={filter} />\n          <FoodText>\n            {filteredProducts.map(product => (\n              <li key={product}>{product}</li>\n            ))}\n          </FoodText>\n          {filteredProducts.length === 0 && (\n            <FoodText>This product is not listed. Enjoy your meal!</FoodText>\n          )}\n          <RegisterBtn to=\"/registration\">Start losing weight</RegisterBtn>\n        </ModalWindow>\n      </Overlay>\n    </>,\n    modalRoot\n  );\n}\n\nModal.propTypes = {\n  setIsOpen: PropTypes.func,\n  dailyRateCalc: PropTypes.shape({\n    dailyRate: PropTypes.number.isRequired,\n    notAllowedProducts: PropTypes.array.isRequired,\n  }),\n};\n","import * as yup from 'yup';\nexport const calcSchema = yup\n  .object({\n    height: yup.number().required().positive().integer().min(100).max(250),\n    age: yup.number().required().positive().integer().min(18).max(100),\n    weight: yup.number().required().positive().integer().min(20).max(500),\n    desiredWeight: yup\n      .number()\n      .required()\n      .positive()\n      .integer()\n      .min(20)\n      .max(500),\n    bloodType: yup.number().required().positive().integer().min(1).max(4),\n  })\n  .required();\n","import { useForm } from 'react-hook-form';\nimport { useOutletContext, useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { toast } from 'react-toastify';\n\nimport styles from './CalcForm.module.css';\nimport Modal from 'components/Modal';\nimport Loader from 'components/Loader';\nimport APIs from 'services/API/API';\nimport { calcSchema } from 'services/validation/calcSchema';\n\nexport default function CalcForm() {\n  const [isOpen, setIsOpen] = useState(false);\n  const [state, setState] = useState('idle');\n  const [dailyRateCalc, setDailyRateCalc] = useState(null);\n\n  const { userId } = useParams();\n  const context = useOutletContext();\n  const currentValues = context?.userData || null;\n  const setDailyRate = context?.setDailyRate;\n  const savedValues = JSON.parse(window.localStorage.getItem('userParams'));\n  const checkedBloodType = currentValues?.bloodType;\n\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(calcSchema),\n    defaultValues: savedValues || {\n      height: currentValues?.height || null,\n      age: currentValues?.age || null,\n      weight: currentValues?.weight || null,\n      desiredWeight: currentValues?.desiredWeight || null,\n      bloodType: currentValues?.bloodType || null,\n    },\n  });\n\n  const onSubmit = async (params) => {\n    setState('pending');\n    toast.dismiss();\n\n    if (userId) {\n      const { data } = await APIs.calculateDaylyAuthRequest(userId, params);\n      context?.setNotAllowedProducts(data.notAllowedProducts);\n      setDailyRate({\n        dailyRate: data?.dailyRate || data?.summaries[0]?.dailyRate,\n        kcalConsumed: data?.summaries[0]?.kcalConsumed,\n        kcalLeft: data?.summaries[0]?.kcalLeft || data?.dailyRate,\n        percentsOfDailyRate: data?.summaries[0]?.percentsOfDailyRate,\n      });\n    } else {\n      window.localStorage.setItem('userParams', JSON.stringify(params));\n      const { data } = await APIs.calculateDaylyRequest(params);\n      setDailyRateCalc(data);\n      setIsOpen(true);\n    }\n\n    setState('idle');\n  };\n\n  const { height, age, weight, desiredWeight, bloodType } = errors;\n  const errorMessage = height?.message || age?.message || weight?.message || desiredWeight?.message || bloodType?.message;\n\n  useEffect(() => {\n    if (errorMessage) {\n      toast.info(errorMessage);\n    }\n  }, [errorMessage]);\n\n  return (\n    <div className={styles.Thumb}>\n      <h1 className={styles.Title}>Calculate your daily calorie intake right now</h1>\n      <form className={styles.FormStyled} onSubmit={handleSubmit(onSubmit)}>\n        <div className={styles.LabelFirst}>\n          <label className={styles.FormLabel} htmlFor=\"height\">\n            Height *\n            <input className={styles.TextInp} id=\"height\" {...register('height')} />\n            <span className={styles.tooltiptext}>min. 100, max. 250</span>\n          </label>\n\n          <label className={styles.FormLabel} htmlFor=\"age\">\n            Age *\n            <input className={styles.TextInp} id=\"age\" {...register('age')} />\n            <span className={styles.tooltiptext}>min. 18, max. 100</span>\n          </label>\n\n          <label className={styles.FormLabel} htmlFor=\"weight\">\n            Current weight *\n            <input className={styles.TextInp} id=\"weight\" {...register('weight')} />\n            <span className={styles.tooltiptext}>min. 20, max. 500</span>\n          </label>\n        </div>\n\n        <div className={styles.LabelFirst}>\n          <label className={styles.FormLabel} htmlFor=\"desiredWeight\">\n            Desired weight *\n            <input className={styles.TextInp} id=\"desiredWeight\" {...register('desiredWeight')} />\n            <span className={styles.tooltiptext}>min. 20, max. 500</span>\n          </label>\n\n          <label className={styles.FormLabel} htmlFor=\"bloodType\">\n            <p className={styles.BloodTitle}>Blood type*</p>\n            <ul className={styles.List}>\n              {[1, 2, 3, 4].map((type) => (\n                <li key={type}>\n                  <input\n                    className={styles.RadioInp}\n                    {...register('bloodType')}\n                    id={`blood-inp-${type}`}\n                    type=\"radio\"\n                    value={type}\n                    checked={type === +(watch('bloodType') ?? checkedBloodType)}\n                  />\n                  <label htmlFor={`blood-inp-${type}`}>{type}</label>\n                </li>\n              ))}\n            </ul>\n          </label>\n        </div>\n        <div className={styles.ButtonCon}>\n          <button className={styles.Button} type=\"submit\">Start losing weight</button>\n        </div>\n      </form>\n      {isOpen && dailyRateCalc && (\n        <Modal {...{ setIsOpen, dailyRateCalc, isOpen }} />\n      )}\n\n      {state === 'pending' && <Loader />}\n    </div>\n  );\n}\n","import styled from 'styled-components';\n\nexport const FilterWrap = styled.div`\n  margin-right: auto;\n  margin-left: auto;\n  margin-bottom: 12px;\n  align-content: center;\n`;\n\nexport const FilterInput = styled.input`\n  width: ${p => (p.isAuth ? '260px' : '280px')};\n  padding: 3px;\n  font-size: 13px;\n  border-color: #264061;\n  outline: none;\n  border: none;\n\n  border-bottom: 2px solid ${p => p.theme.modalTextColor};\n  background: transparent;\n\n  font-family: 'Jost', sans-serif;\n  font-style: normal;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 1.21;\n  letter-spacing: 0.04em;\n  color: ${p => p.theme.modalTextColor};\n\n  ::placeholder {\n    color: ${p => p.theme.modalTextColor};\n  }\n\n  margin-left: auto;\n  margin-right: auto;\n  @media (min-width: 768px) {\n    width: ${p => (p.isAuth ? '270px' : '330px')};\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FilterInput, FilterWrap } from './Filter.styled';\n\nconst Filter = ({ onChangeFilter, value, isAuth = false }) => (\n  <FilterWrap>\n    <FilterInput\n      isAuth={isAuth}\n      onChange={onChangeFilter}\n      type=\"text\"\n      value={value}\n      name=\"name\"\n      pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n      title=\"Name may contain only letters, apostrophe, dash and spaces.\"\n      required\n      placeholder=\"Search product\"\n    />\n  </FilterWrap>\n);\n\nexport default Filter;\n\nFilter.propTypes = {\n  onChangeFilter: PropTypes.func.isRequired,\n  value: PropTypes.string,\n  isAuth: PropTypes.bool,\n};\n","import styled from 'styled-components';\nimport { breakpoints } from 'helpers/breakpoints';\n\nexport const Thumb = styled.div`\ndisplay: flex;\nflex-direction: column;\njustify-content: space-between;\n\n@media ${breakpoints.desktop}{\n    flex-direction: row;\n}`;\n","import CalcForm from 'components/CalcForm';\nimport { Thumb } from './Calculator.styled';\nexport default function CalculatorPage() {\n  return (\n    <Thumb>\n      <CalcForm />\n    </Thumb>\n  );\n}\n"],"names":["Overlay","styled","breakpoints","CloseLine","ModalWindow","p","theme","modalColor","ModulCloseBtn","ModalTitle","Callories","modalTextColor","CalloriesText","ModulLine","FoodTitle","FoodText","RegisterBtn","NavLink","modalRoot","document","getElementById","Modal","setIsOpen","dailyRateCalc","dailyRate","notAllowedProducts","useState","filter","setFilter","useEffect","addEventListener","handleKeyDown","body","style","overflow","removeEventListener","handleCloseClick","event","code","filteredProducts","useMemo","product","toLowerCase","includes","sort","prev","post","localeCompare","createPortal","onClick","currentTarget","target","Container","GoBackBtn","type","width","height","viewBox","fill","xmlns","d","Filter","onChangeFilter","value","map","length","to","calcSchema","yup","required","positive","integer","min","max","age","weight","desiredWeight","bloodType","CalcForm","isOpen","state","setState","setDailyRateCalc","userId","useParams","context","useOutletContext","currentValues","userData","setDailyRate","savedValues","JSON","parse","window","localStorage","getItem","checkedBloodType","useForm","resolver","yupResolver","defaultValues","register","handleSubmit","watch","errors","formState","onSubmit","params","toast","APIs","data","setNotAllowedProducts","summaries","kcalConsumed","kcalLeft","percentsOfDailyRate","setItem","stringify","errorMessage","message","className","styles","htmlFor","id","checked","Loader","FilterWrap","FilterInput","isAuth","onChange","name","pattern","title","placeholder","Thumb","CalculatorPage"],"sourceRoot":""}